// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/

// Risk indicator
// inspired by Benjamin Cowen's complicated function
// adjusted for smaller procentage moves over time by log(Low growth curve) *, seems good enough.
// normalized between 0-1 default **
// No rights reserved, copy, paste, do what you want.
// * thanks to quantadelic
// ** thanks FlyingSix (https://stackoverflow.com/questions/62306070/pine-script-normalize-and-rescale-function-with-calculation-or-input-errors)

//@version=4
study("Risk metric")

normalize(_src, _min, _max) => 
    // Normalizes series with unknown min/max using historical min/max.
    // _src: series to rescale.
    // _min: minimum value of rescaled series.
    // _max: maximum value of rescaled series.
    var _historicMin = +10e10
    var _historicMax = -10e10
    _historicMin := min(nz(_src, _historicMin), _historicMin)
    _historicMax := max(nz(_src, _historicMax), _historicMax)
    _min + (_max - _min) * (_src - _historicMin) / max(_historicMax - _historicMin, 10e-10)

// Code from quantadelic 

TimeIndex       =   time < 1279670400000 ? 3.0 : (time - 1279670400000) / 86400000 
Weight          =   (log10(TimeIndex + 10) * TimeIndex * TimeIndex - TimeIndex) / 30000
TimeDelta       =   time - time[1] 

// bitcoin log bands.
btcLowIntercept =   -3.0269716
btcLowSlope     =   0.001329
btcLowSlopeCum  =   btcLowSlope * TimeIndex
btcLowLogDev    =   TimeIndex > 2 ? log(Weight) + btcLowIntercept + btcLowSlopeCum : na 
btcLowDev       =   pow(2.718281828459, btcLowLogDev) 

// ethereum log bands. 
ethLowIntercept =   -6.65
ethLowSlope     =   0.0013
ethLowSlopeCum  =   ethLowSlope * TimeIndex
ethLowLogDev    =   TimeIndex > 2 ? log(Weight) + ethLowIntercept + ethLowSlopeCum : na
ethLowDev       =   pow(2.718281828459, ethLowLogDev)

// code from quantadelic ends

choice = input(title="Multiplier", options=["None","Growth curve (btc)", "Growth curve (eth)"], defval="None")

weeks = input(20, title = 'Length')
loga  = input(false, title = 'Log Fraction')
MA = sma(close, weeks)

bubble = (choice == "Growth curve (btc)" and loga) ? normalize(log((close)/MA)*(log(btcLowDev+math.e)),0,1)         :
         (choice == "Growth curve (eth)" and loga) ? normalize(log(close/MA)*log(ethLowDev+math.e),0,1)             :
         (choice == "None" and loga) ? normalize(log(close/MA),0,1)                                                 :
         (choice == "Growth curve (btc)" and (loga == false)) ? normalize(((close)/MA)*(log(btcLowDev+math.e)),0,1) :
         (choice == "Growth curve (eth)" and (loga == false)) ? normalize((close/MA)*log(ethLowDev+math.e),0,1)     :
         normalize((close/MA),0,1)



red = int(normalize(bubble, 0,255))
blue = int(normalize(-bubble, 0, 255))
color risk_color = color.rgb(red,0,blue,0)
plot(bubble, color=risk_color, linewidth=2, title="Risk Levels")
